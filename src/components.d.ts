/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface WebComplete {
    'cssClasses': { wrapper: string; input: string; suggestions: string; suggestion: string; active: string; };
    'disabled': boolean;
    'inputPlaceholder': string;
    'maxSuggestions': number;
    'minInput': number;
    'suggestionGenerator': (text) => Promise<{text:string, value:string}[]>;
  }
}

declare global {


  interface HTMLWebCompleteElement extends Components.WebComplete, HTMLStencilElement {}
  var HTMLWebCompleteElement: {
    prototype: HTMLWebCompleteElement;
    new (): HTMLWebCompleteElement;
  };
  interface HTMLElementTagNameMap {
    'web-complete': HTMLWebCompleteElement;
  }
}

declare namespace LocalJSX {
  interface WebComplete extends JSXBase.HTMLAttributes<HTMLWebCompleteElement> {
    'cssClasses'?: { wrapper: string; input: string; suggestions: string; suggestion: string; active: string; };
    'disabled'?: boolean;
    'inputPlaceholder'?: string;
    'maxSuggestions'?: number;
    'minInput'?: number;
    'onSelected'?: (event: CustomEvent<any>) => void;
    'onUnselected'?: (event: CustomEvent<any>) => void;
    'suggestionGenerator'?: (text) => Promise<{text:string, value:string}[]>;
  }

  interface IntrinsicElements {
    'web-complete': WebComplete;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


